openapi: 3.0.0
info:
  title: TaskFlow API
  version: 1.0.0
  description: Full API documentation for TaskFlow project (Auth, Users, Tasks)

servers:
  - url: http://localhost:8080

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [todo, in_progress, done]
        userID:
          type: string

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: "john@example.com"
              username: "john123"
              password: "secret123"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /auth/login:
    post:
      summary: Login user and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: "john@example.com"
              password: "secret123"
      responses:
        "200":
          description: JWT token
          content:
            application/json:
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

  /users/me:
    get:
      summary: Get profile of current logged-in user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update profile of current user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              username: "newusername"
      responses:
        "200":
          description: Updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /tasks:
    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: "Buy groceries"
              description: "Milk, Bread, Eggs"
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    get:
      summary: List tasks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [todo, in_progress, done]
        - in: query
          name: q
          schema:
            type: string
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

  /tasks/{id}:
    get:
      summary: Get a task by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Task found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: "New Title"
              description: "Updated description"
      responses:
        "200":
          description: Updated task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Task deleted

  /tasks/{id}/status:
    patch:
      summary: Update task status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            example:
              status: "done"
      responses:
        "200":
          description: Updated task with new status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
